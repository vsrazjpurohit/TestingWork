{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Times New Roman;}{\f2\fnil\fcharset0 Segoe UI Emoji;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs96\lang9\par
\ul s\fs72 oftware Testing Assignment\par
\ulnone     \b\fs56 Module \-\-\-\-- 1 \b0 (\b Fundamental\b0 )\par
\par

\pard\sa200\sl240\slmult1\fs96 . \b\fs36 What is SDLC ?\b0\par

\pard\sl240\slmult1\ul\b\fs32 Answer \ulnone :- \b0\fs28 SDLC (Software Development Life Cycle) is the step-by-step process to make software. It includes planning, designing, coding, testing, and maintaining the software. SDLC helps to make sure the software works well and is delivered on time. It also reduces mistakes and saves time.\par
\par
\fs96 . \b\fs36 What is software testing ?\b0\par
\ul\b\fs32 Answer\ulnone  :- \b0\fs28  Software Testing is a process used to identify the correctness, completeness, and quality of developed computer software.\par
\par
\fs96 . \b\fs36 What is agile methodology ? \par

\pard\sa160\sl278\slmult0\ul\fs32 Answer\ulnone  :-  \b0\fs28 Agile methodology is an approach where testing is carried out continuously alongside development in small iterations or sprints. It helps in getting quick feedback, adapting to changes easily, and delivering highquality software faster.\par
\fs96 . \b\fs36 What is SRS ?\par
\ul\fs32 Answer\ulnone  :- \b0\fs28 SRS (Software Requirements Specification) is a document that explains what the software should do. It contains all the details about the features, rules, and needs of the software. It helps developers understand what to build\b\fs32 .\par
\b0\fs96 . \b\fs36 What is oops ?\par
\ul\fs32 Answer\ulnone  :- \b0\fs28 ObjectOriented Programming System, OOPs is the use of objectoriented concepts to build test scripts and frameworks that are easy to maintain, reuse, and extend\fs24 .\par
\fs96 . \b\fs36 Write Basic Concepts of oops ?\par
\ul\fs32 Answer\ulnone  \fs28 :- \b0 Concepts of oops :- Class ,Object ,Inheritance, Polymorphism, Encapsulation, Abstraction\par
\fs96 . \b\fs36 What is object ?\par
\ul\fs32 Answer \ulnone :- \b0\fs28 An object is something you create based on a class. Object is instance of class with state (data) and behaviour.\par
\fs96 . \b\fs36 What is class ?\par
\ul\fs32 Answer\ulnone  :- \b0\fs28 Class is a blueprint or template used to create objects. It defines the properties (data) and actions (functions) of an object.\par
\fs96 . \b\fs36 What is encapsulation ?\par
\ul\fs32 Answer \ulnone :- \b0\fs28 Wrapping data into single unit is called Encapsulation. Encapsulation is one of the main concepts of Object-Oriented Programming (OOPS).\par
\fs96 . \b\fs36 What is inheritance ?\par
\ul\fs32 Answer \ulnone :- \b0\fs28 To access proprety of one class to another class is called inheritance. It use of reusability of code\fs26 . \par
\fs96 . \b\fs36 What is polymorphism ?\par
\ul\fs32 Answer\ulnone  :- \b0\fs28 Polymorphism means one thing can behave in different ways. In programming, it allows the same function or object to work differently based on the situation.\par
\fs96 . \b\fs36 Draw Usecase on online bill payment system (paytm)\par
    {\fs28{\field{\*\fldinst{HYPERLINK https://drive.google.com/file/d/1KgTG7iekeMI4IwbhGSgnetSmlYWcXEW8/view?usp=sharing }}{\fldrslt{https://drive.google.com/file/d/1KgTG7iekeMI4IwbhGSgnetSmlYWcXEW8/view?usp=sharing\ul0\cf0}}}}\f0\fs28\par
\b0\fs96 . \b\fs36 Draw Usecase on Broadcasting System.\par
{\fs28{\field{\*\fldinst{HYPERLINK https://drive.google.com/file/d/19rBBPC_OEN6oBHFmVyxEs_nXPfEPYNt0/view?usp=sharing }}{\fldrslt{https://drive.google.com/file/d/19rBBPC_OEN6oBHFmVyxEs_nXPfEPYNt0/view?usp=sharing\ul0\cf0}}}}\f0\fs28\par
\b0\fs96 .\b\fs36  Draw Usecase on banking system for customers.\par
{\fs28{\field{\*\fldinst{HYPERLINK https://drive.google.com/file/d/1bLV8MqRywt-RxMmCp9AV1FLPrJ1aKX2l/view?usp=sharing }}{\fldrslt{https://drive.google.com/file/d/1bLV8MqRywt-RxMmCp9AV1FLPrJ1aKX2l/view?usp=sharing\ul0\cf0}}}}\f0\fs28\par
\b0\fs96 .\b\fs36  Write SDLC phases with basic introduction\par
\ul\fs32 Answer\ulnone :- \b0\fs28 SDLC is a process used by software developers to design, develop, test, and maintain software. It helps ensure that the software is high-quality and meets the user's needs.\par
\ul\b\fs36 Phases of SDLC\par
\ulnone\fs32 1. Requirement Gathering and Analysis\par
\b0\fs28 In this phase, developers and clients discuss what the software should do All requirements are collected and analyzed.\par
\b 2. \fs32 System Design\par
\b0\fs28 Based on the requirements, the system architecture and design are prepared This includes both high-level and detailed design.\par
\b 3. \fs32 Implementation (Coding)\par
\b0\fs28 The actual code is written by developers according to the design documents This is where the software is built.\par
\b 4\fs32 . Testing\par
\b0\fs28 The developed software is tested to find and fix bugs It ensures the software works correctly and meets requirements.\par
\b 5\fs32 . Deployment\par
\b0\fs28 After successful testing, the software is released to users It may be deployed in stages or all at once.\par
\b 6. \fs32 Maintenance\par
\b0\fs28 After deployment, updates, bug fixes, and improvements are done as needed to keep the software working smoothly.\par
\fs96 .\b\fs36  Explain Phases of the waterfall model \par
\ul\fs32 Answer\ulnone :- \b0\fs28 The Waterfall Model is a step-by-step software development process where each phase must be completed before moving to the next It\rquote s best suited for projects with clear and fixed requirements.\par
\ul\b\fs36 Phases of the Waterfall Model\ulnone\par
\fs32\par
 1. Requirement Gathering and Analysis\par
 \b0\fs28 In this phase the client\rquote s needs are collected and understood in detail All requirements are documented clearly\par
\b Example: \b0 A company wants to build an online movie ticket booking system.\par
\b\fs32\par
 2. System Design\par
\b0\fs28 Based on the requirements system architecture and design are created This includes UI design, database structure, and overall system flow.\par
\b\fs32  Example:\b0\fs28  Designing the homepage showing movies,Creating a seat layout for each theater,Planning database tables for users, bookings, payments, etc.\par
\par
\b\fs32  3. Implementation (Coding)\par
\b0\fs28 Now developers write the actual code for all modules following the design plan Each part of the system is developed.\par
\b\fs32 Example: \b0\fs28 Backend code in Java/Python to manage booking and payments,Frontend in HTML/CSS/React for the website interface,Integrating APIs for payment gateway and SMS.\par
\par
\b\fs32 4. Integration and Testing\par
\b0\fs28 All modules are combined and tested as a complete system This phase ensures the software works smoothly and errors are fixed.\par
\b\fs32 Example: \b0\fs28 Testing if a user can successfully select seats and make a payment,Checking if confirmation messages are sent.\par
\par
\b\fs32 5. Deployment\par
\b0\fs28 The final software is deployed in the real-world environment, either for the client or for public users.\par
\b\fs32 Example: \b0\fs28 The movie booking website is launched, and users can now book tickets online.\par
\par
\b\fs32 6. Maintenance\par
\b0\fs28 After the software goes live, it may require updates, bug fixes, or small improvements based on user feedback.\par
\b\fs32 Example: \b0\fs28 Fixing errors reported by users,Adding a new feature like "Cancel Ticket Option"\par
\fs96 .\b\fs36  Write phases of spiral model\par

\pard\sb100\sa100\sl240\slmult1\ul\fs32 Answer\ulnone\fs36 :-\f1\fs28  \fs32 Phases of the Spiral Model\b0 :\fs28\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent360{\pntxtb\'B7}}\fi-360\li720\sb100\sa100\sl240\slmult1\tx720     Planning Phase\b\par
{\pntext\f3\'B7\tab}\b0\fs26     \fs28 Risk Analysis Phase\b\par
{\pntext\f3\'B7\tab}\b0    Engineering (Development & Testing) Phase\b\par
{\pntext\f3\'B7\tab}\b0    Evaluation (Customer Review) Phase\par

\pard\sb100\sa100\sl240\slmult1\tx720\f0\fs96 .\b\fs36  Write agile manifesto principles \par

\pard\sb100\sa100\sl240\slmult1\ul\fs32 Answer\ulnone  :- \b0\f1  \fs28 Here are the 12 Agile Manifesto Principles\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent360{\pntxtb\'B7}}\fi-360\li720\sb100\sa100\sl240\slmult1\tx720 Customer satisfaction through early and continuous delivery\par
{\pntext\f3\'B7\tab}Welcome changing requirements\par
{\pntext\f3\'B7\tab}Deliver working software frequently\par
{\pntext\f3\'B7\tab}Close collaboration between business and developers\par
{\pntext\f3\'B7\tab}Build projects around motivated individuals\par
{\pntext\f3\'B7\tab}Face-to-face communication\par
{\pntext\f3\'B7\tab}Working software as the primary measure of progress\par
{\pntext\f3\'B7\tab}Sustainable development\par
{\pntext\f3\'B7\tab}Continuous attention to technical excellence and good design\par
{\pntext\f3\'B7\tab}Simplicity\par
{\pntext\f3\'B7\tab}Self-organizing teams\par
{\pntext\f3\'B7\tab}Regular reflection and adaptation\par

\pard\sb100\sa100\sl240\slmult1\tx720\f0\fs96 .\b\fs36  Explain working methodology of agile model and also             write pros and cons.\par
\ul\fs32 Answer\ulnone\fs36 :-\f1\fs28   \b0 The Agile model is an iterative and incremental approach to software development  It breaks the project into small parts called iterations or sprints, usually lasting 1 to 4 weeks.\par
\ul\b\fs32 Working Methodology of Agile Model:\par
\ulnone 1. Initial Requirement Discussion:\par
\b0\fs28     Only high-level requirements are discussed at the start.\par
\b\fs32 2. Sprint Planning:\par
    \b0\fs28 The team and client decide which features to build in the upcoming sprint.\par
\b\fs32 3. Design & Development:\par
    \b0\fs28 The team designs and codes the selected features during the sprint.\par
\b\fs32 4. Testing & Review:\par
    \b0\fs28 Features are tested, and bugs are fixed within the same sprint.\par
\b\fs32 5. Customer Feedback:\par
     \b0\fs28 At the end of the sprint, the product is shown to the customer for feedback.\par
\b\fs32 6. Iteration & Improvement:\par
    \b0\fs28 Based on feedback, improvements are made in the next sprint.\fs32\par
    \fs72 . \fs28 This process continues until the full software is completed.\par

\pard\sb100\sa100\sl240\slmult1\b\fs32 Pros of Agile Model :\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent360{\pntxtb\'B7}}\fi-360\li720\sb100\sa100\sl240\slmult1\tx720   \b0\fs28  Flexible to changes\par
{\pntext\f3\'B7\tab}   Frequent delivery of working software\par
{\pntext\f3\'B7\tab}   Better collaboration with stakeholders\par
{\pntext\f3\'B7\tab}   Improved product quality\par

\pard\sb100\sa100\sl240\slmult1\b\fs32 Cons of Agile Model :\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent360{\pntxtb\'B7}}\fi-360\li720\sb100\sa100\sl240\slmult1\tx720    \b0\fs28  Requires experienced team members\par
{\pntext\f3\'B7\tab}    Documentation may be minimal\par
{\pntext\f3\'B7\tab}    Not ideal for fixed-budget projects\par
{\pntext\f3\'B7\tab}    Can lead to scope creep without proper control\par

\pard\sb100\sa100\sl240\slmult1\tx720\f0\fs96 .\b\fs36  Draw usecase on OTT  Platform. \par
{\fs32{\field{\*\fldinst{HYPERLINK https://drive.google.com/file/d/1deLcwk-bhM7jR04LBFX8oHp8CpHGTLgJ/view?usp=sharing }}{\fldrslt{https://drive.google.com/file/d/1deLcwk-bhM7jR04LBFX8oHp8CpHGTLgJ/view?usp=sharing\ul0\cf0}}}}\b0\f0\fs32\par
\fs96 .\b\fs36  Draw usecase on E-commerce application\par
{\fs32{\field{\*\fldinst{HYPERLINK https://drive.google.com/file/d/17AaYiX7f42kQaS2tzTLKUpSIv4VfwjIB/view?usp=sharing }}{\fldrslt{https://drive.google.com/file/d/17AaYiX7f42kQaS2tzTLKUpSIv4VfwjIB/view?usp=sharing\ul0\cf0}}}}\f0\fs32\par
\b0\fs96 .\b\fs36  Draw usecase on Online shopping product using payment gateway.\par
{\fs28{\field{\*\fldinst{HYPERLINK https://drive.google.com/file/d/1-zJhrBy5nHqPGyeEoiH7QksH7Cv8lMMc/view?usp=sharing }}{\fldrslt{https://drive.google.com/file/d/1-zJhrBy5nHqPGyeEoiH7QksH7Cv8lMMc/view?usp=sharing\ul0\cf0}}}}\f0\fs36\par
\fs32\par
\par
\b0\f1\fs28\par
\par
\par
\par

\pard\sb100\sa100\sl240\slmult1\b\fs32\par

\pard\sb100\sa100\sl240\slmult1\tx720\b0\fs28\par

\pard\sb100\sa100\sl240\slmult1\b\fs32\par
\b0\fs28\par

\pard\sb100\sa100\sl240\slmult1\tx720\f2  \f1\par
\par
\ul\b\fs36\par
\ulnone\f0\fs32\par
\b0\f1\fs28      \par
\par
\par
\par
       \b   \par
\par

\pard\sb100\sa100\sl240\slmult1\b0\fs26\par

\pard\sa160\sl278\slmult0\b\f0\fs96\par
\f1\fs26\par
\f0\fs32\par
\fs28\par
\fs36\par
\b0\par
\fs32\par
\fs26\par
\par
\par
\fs28\par
\par
\fs24\par
\b\fs32\par
\fs28\par

\pard\sl240\slmult1\b0\par
\par
\b\fs96\par

\pard\sa200\sl276\slmult1\b0\par
\fs72\par
\par
}
 